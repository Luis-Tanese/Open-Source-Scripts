/* 
    Promocodes System by Tanese
    ===========================
    Back again with silly scripts. This time it is a promocode system.

    ===============
    How to use:
    ===============
    First, create a file called "PromocodesConfig.json" on U3DS/Servers/YourServer/uScript/Data
    Then load the script normally.
    Now after the script is loaded you can create your first code; 
    Follow this example on how the config looks like: https://pastebin.com/aP3TCnV5
    After making your code, do the command: /savecodes to save the codes in the sript instance.

    Explanation:
    "Code" is the code the players have to put in. (Note: Codes are case sensitive).
    "CodeName" is like the name of the code, purely cosmetic but has to be there.
    "isCodeActive" always leave on true, the code will automatically set it to false when it either expires or the max usages hits the limit.
    "MaxUsages" is the maximum amount of usages the code can be used; Set to 100000 if you want it to have a lot of uses.
    "Permission" is the permission needed to use that code; leave "promocodes.use" as default use.
    "ExpireTime" is the amount of time in seconds the code will be active; it will tick down in real time, so if it is lower then what you put it, thats the reason.
    "UsedBy" is an array to save all the players's ids so that they can't use it again. Leave blank when setting a code
    The rest is pretty self explanatory.

    ===============
    Commands
    ===============
    /savecodes: Saves the codes from the json file and puts them in the script intance
    Permission: promocodes.admin

    /redeem <code>: redeems a code; Self explanatory
    Permission: promocodes.use
*/

ConfigPath = "PromocodesConfig.json";
Codes = [];

event onLoad() {
    LoadPromocodes();
    logger.log("Promocode System by Tanese Loaded.");
    codesExpired = 0;
    codesLoaded = 0;
    foreach (promo in Codes) {
        if (promo["isCodeActive"]) {
            codesLoaded =+ 1;
        } else {
            codesExpired =+ 1;
        }
    }
}

function LoadPromocodes() {
    Data = file.read(ConfigPath);
    if (Data == "") {
        Codes = [];
        SavePromocodes();
    } else {
        Codes = deserialize(Data);
    }
}

function SavePromocodes() {
    jsonData = Codes.serialize();
    file.writeAll(ConfigPath, jsonData);
}

function FindPromocode(code) {
    foreach (promo in Codes) {
        if (promo["Code"] == code) {
            return promo;
        }
    }
    return null;
}

command savecodes() {
    permission = "promocodes.admin";
    allowedCaller = "both";
    execute() {
        LoadPromocodes();
    }
}

command redeem() {
    permission = "promocodes.use";
    execute() {
        if (arguments.count < 1) {
            player.message("Please specify a code!", "red");
            return;
        }
        codeToClaim = arguments[0];
        promo = FindPromocode(codeToClaim);
        if (promo == null) {
            player.message("This code does not exist!", "red");
            return;
        }
        if (!promo["isCodeActive"]) {
            player.message("This code is expired!", "yellow");
            return;
        }
        if (promo["Permission"] != "" and !player.hasPermission(promo["Permission"])) {
            player.message("You don't have permission to use this code!", "yellow");
            return;
        }
        if (promo["UsedBy"].contains(player.id)) {
            player.message("You have already claimed this code!", "yellow");
            return;
        }
        if (promo.containsKey("MaxUsages") and promo["UsedBy"].count >= promo["MaxUsages"]) {
            promo["isCodeActive"] = false;
            SavePromocodes();
            player.message("This code has reached its usage limit.", "red");
            return;
        }
        if (promo["GiveExp"]) {
            player.experience += promo["ExpAmount"];
        }
        if (promo["GiveReputation"]) {
            player.reputation += promo["ReputationAmount"];
        }
        if (promo["GiveItems"]) {
            foreach (item in promo["ItemIDs"]) {
                player.inventory.addItem(item["ItemId"], item["Amount"]);
            }
        }
        promo["UsedBy"].add(player.id);
        SavePromocodes();
        player.message("You have successfully claimed the code: {0}".format(promo["CodeName"]), "green");
        if (promo["UsedBy"].count >= promo["MaxUsages"]) {
            promo["isCodeActive"] = false;
            SavePromocodes();
            logger.log("Code {0} has reached its usage limit and is now deactivated.".format(promo["Code"]), "yellow");
        }
    }
}

event onInterval(1) {
    foreach (promo in Codes) {
        if (promo["isCodeActive"] and promo.containsKey("ExpireTime")) {
            promo["ExpireTime"] -= 1;
            if (promo["ExpireTime"] <= 0) {
                promo["isCodeActive"] = false;
                logger.log("Code {0} has expired.".format(promo["Code"]));
            }
        }
    }
    SavePromocodes();
}
