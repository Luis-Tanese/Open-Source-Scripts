/* 
    Simple Raid Alerts by Tanese
    ============================
    This script sends alerts to a Discord webhook when a barricade is damaged in the game. 
    It includes configuration options to enable or disable the alerts and to include damage logs.

    ========================================
    Modules Needed (Download from releases):
    ========================================
    - uScriptExtended by MolyiEZ: https://github.com/MolyiEZ/uScriptExtended
*/

/* 
    ==============
    Configuration:
    ==============
*/

// General configs
enabled = true; // This is set if you want raid alerts or not; Set 'false' if you don't want it
damageLogs = true; // This is set if you want damage logs a.k.a when a structure gets damaged 

// Webhook configs
webhookURL = "YOUR WEBHOOK LINK HERE"; // This sets your webhook link; Make sure it is inside the ""
webhookImage = "https://i.imgur.com/SFdYgXJ.png"; // This sets the image of your webhook
webhookColor = 15158332; // This sets the color of the webhook embed

/* 
    =====
    Code:
    =====
*/

event onLoad(){
    logger.log("Simple Raid Alerts by Tanese successfully loaded!");
}

event onBarricadeDamaged(player, barricade, damage, cause){
    if (enabled)
    {
        if (damageLogs)
        {
            embed = discordEmbed();
            embed.author.name = "ðŸš¨ Raid Alert ðŸš¨";
            embed.title = "**Barricade Damaged!**";
            embed.description = "**Raider:** {0}\n**Damage:** `{1}`\n**Cause:** {2}\n**Location:** `{3}`\n**Barricade Id:** `{4}`\n**Owner's Id:** `{5}`".format(player.name, damage, cause, barricade.position.toString(), barricade.instanceId, barricade.owner);
            embed.author.iconUrl = webhookImage;
            embed.color = webhookColor;
            embed.footer.text = time.now.date + " | " + time.now.time;
            discordEmbedsQueue.add(embed);
        }
    }
}

event onBarricadeDestroy(player, barricade){
    if (enabled)
    {
        embed = discordEmbed();
        embed.author.name = "ðŸš¨ Raid Alert ðŸš¨";
        embed.title = "**Barricade Destroyed!**";
        embed.description = "**Raider:** {0}\n**Cause:** {2}\n**Location:** `{3}`\n**Barricade Id:** `{4}`\n**Owner's Id:** `{5}`".format(player.name, "", cause, barricade.position.toString(), barricade.instanceId, barricade.owner);
        embed.author.iconUrl = webhookImage;
        embed.color = webhookColor;
        embed.footer.text = time.now.date + " | " + time.now.time;
        discordEmbedsQueue.add(embed);
    }
}

event onStructureDamaged(player, structure, damage, cause){
    if (enabled)
    {
        if (damageLogs)
        {
            embed = discordEmbed();
            embed.author.name = "ðŸš¨ Raid Alert ðŸš¨";
            embed.title = "**Structure Damaged!**";
            embed.description = "**Raider:** {0}\n**Damage:** `{1}`\n**Cause:** {2}\n**Location:** `{3}`\n**Structure Id:** `{4}`\n**Owner's Id:** `{5}`".format(player.name, damage, cause, structure.position.toString(), structure.instanceId, structure.owner);
            embed.author.iconUrl = webhookImage;
            embed.color = webhookColor;
            embed.footer.text = time.now.date + " | " + time.now.time;
            discordEmbedsQueue.add(embed);
        }
    }
}

event onStructureDestroy(player, structure){
    if (enabled)
    {
        embed = discordEmbed();
        embed.author.name = "ðŸš¨ Raid Alert ðŸš¨";
        embed.title = "**Structure Destroyed!**";
        embed.description = "**Raider:** {0}\n**Cause:** {2}\n**Location:** `{3}`\n**Structure Id:** `{4}`\n**Owner's Id:** `{5}`".format(player.name, "", cause, structure.position.toString(), structure.instanceId, structure.owner);
        embed.author.iconUrl = webhookImage;
        embed.color = webhookColor;
        embed.footer.text = time.now.date + " | " + time.now.time;
        discordEmbedsQueue.add(embed);
    }
}

discordEmbedsQueue = [];

event onInterval(10){
    if (discordEmbedsQueue.count == 0) { return; }
    foreach (embed in discordEmbedsQueue)
    {
        discord.sendEmbed(webhookURL, embed);
    }
    discordEmbedsQueue.clear();
}
